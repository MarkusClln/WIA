% This file was created with JabRef 2.9.2.
% Encoding: Cp1252

@inproceedings{burguera2011crowdroid,
  title={Crowdroid: behavior-based malware detection system for android},
  author={Burguera, Iker and Zurutuza, Urko and Nadjm-Tehrani, Simin},
  booktitle={Proceedings of the 1st ACM workshop on Security and privacy in smartphones and mobile devices},
  pages={15--26},
  year={2011},
  organization={ACM}
}

@inproceedings{yan2012droidscope,
  title={DroidScope: Seamlessly Reconstructing the OS and Dalvik Semantic Views for Dynamic Android Malware Analysis.},
  author={Yan, Lok-Kwong and Yin, Heng},
  booktitle={USENIX security symposium},
  pages={569--584},
  year={2012}
}

@inproceedings{bartsch2014zertifizierte,
  title={Zertifizierte Datensicherheit f{\"u}r Android-Anwendungen auf Basis statischer Programmanalysen.},
  author={Bartsch, Steffen and Berger, Bernhard J and Bodden, Eric and Brucker, Achim D and Heider, Jens and Kus, Mehmet and Maseberg, S{\"o}nke and Sohr, Karsten and Volkamer, Melanie},
  booktitle={Sicherheit},
  pages={283--291},
  year={2014}
}

@inproceedings{Feng:2014:ASD:2635868.2635869,
 author = {Feng, Yu and Anand, Saswat and Dillig, Isil and Aiken, Alex},
 title = {Apposcopy: Semantics-based Detection of Android Malware Through Static Analysis},
 booktitle = {Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {FSE 2014},
 year = {2014},
 isbn = {978-1-4503-3056-5},
 location = {Hong Kong, China},
 pages = {576--587},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2635868.2635869},
 doi = {10.1145/2635868.2635869},
 acmid = {2635869},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Android, Inter-component Call Graph, Taint Analysis}
} 

@inproceedings{Ding:2017:MMG:3058060.3058065,
 author = {Ding, Jianwei and Chen, Zhouguo and Zhao, Yue and Su, Hong and Guo, Yubin and Sun, Enbo},
 title = {MGeT: Malware Gene-Based Malware Dynamic Analyses},
 booktitle = {Proceedings of the 2017 International Conference on Cryptography, Security and Privacy},
 series = {ICCSP '17},
 year = {2017},
 isbn = {978-1-4503-4867-6},
 location = {Wuhan, China},
 pages = {96--101},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/3058060.3058065},
 doi = {10.1145/3058060.3058065},
 acmid = {3058065},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Malware Gene, Malware analysis, Security and Protection}
}

@Article{Spreitzenbarth2015,
author="Spreitzenbarth, Michael
and Schreck, Thomas
and Echtler, Florian
and Arp, Daniel
and Hoffmann, Johannes",
title="Mobile-Sandbox: combining static and dynamic analysis with machine-learning techniques",
journal="International Journal of Information Security",
year="2015",
month="Apr",
day="01",
volume="14",
number="2",
pages="141--153",
abstract="Smartphones in general and Android in particular are increasingly shifting into the focus of cyber criminals. For understanding the threat to security and privacy, it is important for security researchers to analyze malicious software written for these systems. The exploding number of Android malware calls for automation in the analysis. In this paper, we present Mobile-Sandbox, a system designed to automatically analyze Android applications in novel ways: First, it combines static and dynamic analysis, i.e., results of static analysis are used to guide dynamic analysis and extend coverage of executed code. Additionally, it uses specific techniques to log calls to native (i.e., ``non-Java'') APIs, and last but not least it combines these results with machine-learning techniques to cluster the analyzed samples into benign and malicious ones. We evaluated the system on more than 69,000 applications from Asian third-party mobile markets and found that about 21 {\%} of them actually use native calls in their code.",
issn="1615-5270",
doi="10.1007/s10207-014-0250-0",
url="https://doi.org/10.1007/s10207-014-0250-0"
}

@inproceedings{Cesare:2010:CMU:1862294.1862301,
 author = {Cesare, Silvio and Xiang, Yang},
 title = {Classification of Malware Using Structured Control Flow},
 booktitle = {Proceedings of the Eighth Australasian Symposium on Parallel and Distributed Computing - Volume 107},
 series = {AusPDC '10},
 year = {2010},
 isbn = {978-1-920682-88-0},
 location = {Brisbane, Australia},
 pages = {61--70},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=1862294.1862301},
 acmid = {1862301},
 publisher = {Australian Computer Society, Inc.},
 address = {Darlinghurst, Australia, Australia},
 keywords = {malware, network security, structured control flow, unpacking}
}
 
@article{Arzt:2014:FPC:2666356.2594299,
 author = {Arzt, Steven and Rasthofer, Siegfried and Fritz, Christian and Bodden, Eric and Bartel, Alexandre and Klein, Jacques and Le Traon, Yves and Octeau, Damien and McDaniel, Patrick},
 title = {FlowDroid: Precise Context, Flow, Field, Object-sensitive and Lifecycle-aware Taint Analysis for Android Apps},
 journal = {SIGPLAN Not.},
 issue_date = {June 2014},
 volume = {49},
 number = {6},
 month = jun,
 year = {2014},
 issn = {0362-1340},
 pages = {259--269},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2666356.2594299}, 
 doi = {10.1145/2666356.2594299},
 acmid = {2594299},
 publisher = {ACM},
 address = {New York, NY, USA}
} 

@INPROCEEDINGS{6394931, 
author={Z. Yang and M. Yang}, 
booktitle={2012 Third World Congress on Software Engineering}, 
title={LeakMiner: Detect Information Leakage on Android with Static Taint Analysis}, 
year={2012}, 
volume={}, 
number={}, 
pages={101-104}, 
keywords={data mining;operating systems (computers);program diagnostics;security of data;Android application market;Android apps;Android platform;LeakMiner;dynamic analysis;information leakage detection;malicious apps;static taint analysis;Androids;Context;Humanoid robots;Java;Runtime;Security;Smart phones;Information security;Mobile computing}, 
doi={10.1109/WCSE.2012.26}, 
ISSN={}, 
month={Nov}
}

@misc{Apps,
  title = {Google Play Apps Statistik},
  howpublished = {\url{https://de.statista.com/statistik/daten/studie/74368/umfrage/anzahl-der-verfuegbaren-apps-im-google-play-store/}},
  note = {Accessed: 2018-04-22}
}

@misc{RiskIQ,
  title = {RiskIQ report about Malicious Mobile Apps in Google Play},
  howpublished = {\url{https://www.riskiq.com/press-release/riskiq-reports-malicious-mobile-apps-google-play-have-spiked-nearly-400/}},
  note = {Accessed: 2018-04-22}
}
@misc{trinius2010visualisierung,
  title={Visualisierung von Malware-Verhalten},
  author={Trinius, Philipp},
  year={2010},
   howpublished = {\url{https://www1.cs.fau.de/filepool/publications/trinius_myphd_abstract.pdf}},
   note = {Accessed: 2018-05-29}
}

@misc{AndoidMarktanteil,
  title = {Marktanteil von Android},
  howpublished = {\url{https://www.netzwelt.de/news/164146-android-vs-ios-plattform-treue-android-91-prozent-deutlich-hoeher.html}},
  note = {Accessed: 2018-04-25}
}

@misc{GooglePlayDownloads,
  title = {Anzahl der Apps, die im Google Play Store heruntergeladen wurden},
  howpublished = {\url{https://de.statista.com/statistik/daten/studie/243412/umfrage/anzahl-von-downloads-im-google-play-store/}},
  note = {Accessed: 2018-04-25}
}

@article{scheid2012kapitel,
  title={Sicherheit mobiler Ger{\"a}te-Schutzma{\ss}nahmen, Angriffsarten \& Angriffserkennung auf Android},
  author={Scheid, Julian},
  journal={Ausgew{\"a}hlte Themen der IT-Sicherheit},
  pages={7},
  year={2012}
}

@misc{LinuxSicherheitskonzept,
  title = {Sicherheitskonzepte von Linux},
  howpublished = {\url{https://wiki.ubuntuusers.de/Archiv/Sicherheitskonzepte/}},
  note = {Accessed: 2018-04-25}
}

@misc{Android-Versionen,
  title = {Anteile der verschiedenen Android-Versionen an allen Ger√§ten mit Android OS weltweit im Zeitraum 10. bis 16. April 2018},
  howpublished = {\url{https://de.statista.com/statistik/daten/studie/180113/umfrage/anteil-der-verschiedenen-android-versionen-auf-geraeten-mit-android-os/}},
  note = {Accessed: 2018-04-25}
}

@misc{PermissonModel,
  title = {Request App Permissions},
  howpublished = {\url{https://developer.android.com/training/permissions/requesting.html}},
  note = {Accessed: 2018-04-25}
}

@book{gargenta2011einfuhrung,
  title={Einf{\"u}hrung in die Android-Entwicklung},
  author={Gargenta, Marko},
  year={2011},
  publisher={O'Reilly Germany},
  url = {https://books.google.de/books?hl=de&lr=&id=34S3Jt1ONTkC&oi=fnd&pg=PR5&dq=android	+architektur&ots=Hm7wBINdJG&sig=620owrYAI_6HXB7XDZjvfRM59KE#v=onepage&q&f=false}
  
  
}

@misc{Dalvik,
  title = {ART vs. Dalvik},
  howpublished = {\url{http://www.areamobile.de/specials/26470-art-vs-dalvik-im-test-die-neue-android-runtime-im-vergleich}},
  note = {Accessed: 2018-05-28}
}

@misc{dynamische_analyse,
  title = {dynamische Analyse},
  howpublished = {\url{https://www.informatik.uni-bremen.de/st/lehre/re10/dynamische_analyse.pdf}},
  note = {Accessed: 2018-05-28}
}

@Article{Lehner2006,
author="Lehner, Marcel
and Hermann, Eckehard",
title="Auffinden von verschleierter Malware",
journal="Datenschutz und Datensicherheit - DuD",
year="2006",
month="Dec",
day="01",
volume="30",
number="12",
pages="768--772",
abstract="Malware-Autoren setzen zunehmend Verschleierungsmechanismen wie Komprimierung, Verschl{\"u}sselung oder sich selbst modifizierenden Programmcode ein, welche das Auffinden der Malware durch herk{\"o}mmliche Virenerkennungsverfahren wie zum Beispiel die signaturbasierte Suche sehr m{\"u}hsam und teilweise sogar erfolglos erscheinen lassen. Ein erfolgversprechender Ansatz, um auch unbekannte Viren, W{\"u}rmer oder Trojaner zu erkennen, ist die heuristische Analyse",
issn="1862-2607",
doi="10.1007/s11623-006-0237-8",
url="https://doi.org/10.1007/s11623-006-0237-8"
}

@inproceedings{ernst2003static,
  title={Static and dynamic analysis: Synergy and duality},
  author={Ernst, Michael D},
  booktitle={WODA 2003: ICSE Workshop on Dynamic Analysis},
  pages={24--27},
  year={2003}
}

@Article{Benzm√ºller2018,
author="Benzm{\"u}ller, Ralf",
title="Machine Learning und Virenschutz",
journal="Datenschutz und Datensicherheit - DuD",
year="2018",
month="Apr",
day="01",
volume="42",
number="4",
pages="224--230",
abstract="Die Erkennung und Abwehr von Schadprogrammen hat {\"u}ber die Jahrzehnte immer mehr Bedeutung gewonnen. Im Laufe der Zeit wurden zahlreiche Schutztechnologien entwickelt. Auch die K{\"u}nstliche Intelligenz und Maschinelles Lernen werden erfolgreich eingesetzt. Welche Chancen bieten sie und wo sind ihre Grenzen?",
issn="1862-2607",
doi="10.1007/s11623-018-0912-6",
url="https://doi.org/10.1007/s11623-018-0912-6"
}

@INPROCEEDINGS{7365827,
author={J. Yousefi and Y. Sedaghat and M. Rezaee},
booktitle={2015 5th International Conference on Computer and Knowledge Engineering (ICCKE)},
title={Masking wrong-successor Control Flow Errors employing data redundancy},
year={2015},
volume={},
number={},
pages={201-205},
keywords={CMOS digital integrated circuits;errors;integrated circuit reliability;redundancy;CMOS technology;MiBench package;control flow errors;control variable determination;data redundancy;fault injection control;traditional fault masking technique;transient faults;transistor size reduction;wrong successor CFE;wrong-successor control flow error masking;Performance evaluation;Reliability;Control variables;Error correction;Wrong-successor control flow error;fault masking},
doi={10.1109/ICCKE.2015.7365827},
ISSN={},
month={Oct}
}

@misc{Kontrollflussgraph,
  title = {√úberdeckungsma√üe},
  howpublished = {\url{http://home.edvsz.fh-osnabrueck.de/skleuker/CSI/Methoden/kombiquUeberdeckung.html}},
  note = {Accessed: 2018-05-29}
}




